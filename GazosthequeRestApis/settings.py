"""
Django settings for GazosthequeRestApis project.

Generated by 'django-admin startproject' using Django 4.2.23.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

INTERNAL_IPS = [
    '152.77.203.57',
]

ALLOWED_HOSTS = ['liphy-gazotheque.univ-grenoble-alpes.fr', 'localhost']

MIGRATION_MODULES = {
    'Gazostheque' : 'Gazostheque.migrations'
}

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'django_cas_ng',
    'corsheaders',
    'rest_framework',
    'Gazostheque',
    'frontheque',
    'taggit',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # CORS should be early
    'django.middleware.common.CommonMiddleware',  # Common middleware should be before CSRF
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django_cas_ng.middleware.CASMiddleware',  # CAS middleware after auth
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    
    'django.middleware.locale.LocaleMiddleware',
]

SESSION_COOKIE_AGE = 10800 #3600 is 1 hour in seconds, set to 3 hours for now
TIME_ZONE = 'Europe/Paris'
USE_TZ = True

CORS_ORIGIN_ALLOW_ALL = False
CORS_ALLOWED_ORIGINS = [
    "https://liphy-gazotheque.univ-grenoble-alpes.fr",
    'https://authentification.univ-grenoble-alpes.fr'
]
CORS_ORIGIN_WHITELIST = (
    'http://localhost:8082',  # Debugger
    'http://localhost:3039',  # Frontend
    
    'https://liphy-gazotheque.univ-grenoble-alpes.fr',  # Production domain
    'https://authentification.univ-grenoble-alpes.fr',  # CAS authentication
)

CORS_ALLOW_METHODS = [
    'GET',
    'POST',
    'OPTIONS',
    'DELETE',
    'PUT'
]

CORS_ALLOW_HEADERS = [
    'Content-Type',
    'Authorization',
    'Accept',
    'X-Requested-With',
    'Cache-Control',
    'If-Modified-Since',
    'If-None-Match',
    'User-Agent',
]

ROOT_URLCONF = 'GazosthequeRestApis.urls'

# From here on Email settings:
# Set the email backend to use
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# Check if DJANGO_ENV environment variable is set to 'production'
# SMTP configuration for a remote server
# # Really to come by because this not working for real
if os.environ.get('DJANGO_ENV') == 'production':
    EMAIL_HOST = 'mailhost.u-ga.fr'                             # Your SMTP server address
    EMAIL_PORT = 25                                             # Port for SMTP server (587 for TLS, 465 for SSL)
    EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')         # Your email address
    DEFAULT_FROM_EMAIL = os.environ.get('EMAIL_HOST_USER')      # Set default from email address
    EMAIL_USE_TLS = False                                       # Disable TLS
    EMAIL_USE_SSL = False                                       # Enable SSL
else:
    # Default SMTP configuration for testing locally
    EMAIL_HOST = 'localhost'
    EMAIL_PORT = 1025
    EMAIL_USE_TLS = False
    DEFAULT_FROM_EMAIL = 'liphy-direction@univ-grenoble-alpes.fr'
    EMAIL_HOST_USER = 'liphy-direction@univ-grenoble-alpes.fr'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'GazosthequeRestApis.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('DB_NAME'),
        'USER': os.environ.get('DB_USER'),
        'PASSWORD': os.environ.get('DB_PASSWORD'),
        'HOST': 'localhost',
        'PORT': '',
    }
}

AUTH_USER_MODEL = "Gazostheque.CustomUsers"

AUTHENTICATION_BACKENDS = [
    'Gazostheque.custom_auth.CustomAuth',           # Custom authentication
    'django.contrib.auth.backends.ModelBackend',    # Optionally keeping Default Django authentication backend
    'django_cas_ng.backends.CASBackend',            # CAS authentication backend
]

CAS_SERVER_URL = 'https://authentification.univ-grenoble-alpes.fr'
CAS_VERSION = '3'
CAS_ADMIN_REDIRECT = False
LOGIN_URL = '{}/cas/login?service={{}}'.format(CAS_SERVER_URL)
LOGOUT_URL = '{}/cas/logout'.format(CAS_SERVER_URL)

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
USE_I18N = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'assets/')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'frontheque/.next/static'),
]

DEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'
MEDIA_ROOT = os.path.join(BASE_DIR, 'assets')
MEDIA_URL = '/assets/' #locally yet
DATA_UPLOAD_MAX_MEMORY_SIZE = 52428800
FILE_UPLOAD_MAX_MEMORY_SIZE = 52428800